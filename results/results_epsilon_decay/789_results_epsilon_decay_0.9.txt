Running Q-learning algorithm with parameters: {'episodes': 300, 'max_steps': 2000, 'lr': 0.2, 'gamma': 0.99, 'seed': 789, 'epsilon': 1.0, 'epsilon_decay': 0.9}
Episode 1 completed. Time: 3.19 seconds. Epsilon: 1.0. Steps: 1816
Episode 2 completed. Time: 10.68 seconds. Epsilon: 0.9. Steps: 2000
Episode 3 completed. Time: 11.55 seconds. Epsilon: 0.81. Steps: 2000
Episode 4 completed. Time: 4.27 seconds. Epsilon: 0.7290000000000001. Steps: 909
Episode 5 completed. Time: 7.03 seconds. Epsilon: 0.6561000000000001. Steps: 2000
Episode 6 completed. Time: 2.37 seconds. Epsilon: 0.5904900000000002. Steps: 552
Episode 7 completed. Time: 10.60 seconds. Epsilon: 0.5314410000000002. Steps: 2000
Episode 8 completed. Time: 9.55 seconds. Epsilon: 0.47829690000000014. Steps: 2000
Episode 9 completed. Time: 10.79 seconds. Epsilon: 0.43046721000000016. Steps: 2000
Episode 10 completed. Time: 9.86 seconds. Epsilon: 0.38742048900000015. Steps: 2000
Episode 11 completed. Time: 7.63 seconds. Epsilon: 0.34867844010000015. Steps: 2000
Episode 12 completed. Time: 9.01 seconds. Epsilon: 0.31381059609000017. Steps: 2000
Episode 13 completed. Time: 5.70 seconds. Epsilon: 0.28242953648100017. Steps: 2000
Episode 14 completed. Time: 7.52 seconds. Epsilon: 0.25418658283290013. Steps: 2000
Episode 15 completed. Time: 4.89 seconds. Epsilon: 0.22876792454961012. Steps: 2000
Episode 16 completed. Time: 3.90 seconds. Epsilon: 0.2058911320946491. Steps: 2000
Episode 17 completed. Time: 2.38 seconds. Epsilon: 0.1853020188851842. Steps: 2000
Episode 18 completed. Time: 1.44 seconds. Epsilon: 0.16677181699666577. Steps: 2000
Episode 19 completed. Time: 1.37 seconds. Epsilon: 0.1500946352969992. Steps: 2000
Episode 20 completed. Time: 1.27 seconds. Epsilon: 0.13508517176729928. Steps: 2000
Episode 21 completed. Time: 1.10 seconds. Epsilon: 0.12157665459056936. Steps: 2000
Episode 22 completed. Time: 1.03 seconds. Epsilon: 0.10941898913151243. Steps: 2000
Episode 23 completed. Time: 1.03 seconds. Epsilon: 0.0984770902183612. Steps: 2000
Episode 24 completed. Time: 1.00 seconds. Epsilon: 0.08862938119652508. Steps: 2000
Episode 25 completed. Time: 0.99 seconds. Epsilon: 0.07976644307687257. Steps: 2000
Episode 26 completed. Time: 1.01 seconds. Epsilon: 0.07178979876918531. Steps: 2000
Episode 27 completed. Time: 1.01 seconds. Epsilon: 0.06461081889226679. Steps: 2000
Episode 28 completed. Time: 0.99 seconds. Epsilon: 0.05814973700304011. Steps: 2000
Episode 29 completed. Time: 0.99 seconds. Epsilon: 0.0523347633027361. Steps: 2000
Episode 30 completed. Time: 0.99 seconds. Epsilon: 0.04710128697246249. Steps: 2000
Episode 31 completed. Time: 1.01 seconds. Epsilon: 0.042391158275216244. Steps: 2000
Episode 32 completed. Time: 0.98 seconds. Epsilon: 0.03815204244769462. Steps: 2000
Episode 33 completed. Time: 0.98 seconds. Epsilon: 0.03433683820292516. Steps: 2000
Episode 34 completed. Time: 0.99 seconds. Epsilon: 0.030903154382632643. Steps: 2000
Episode 35 completed. Time: 0.99 seconds. Epsilon: 0.02781283894436938. Steps: 2000
Episode 36 completed. Time: 1.02 seconds. Epsilon: 0.025031555049932444. Steps: 2000
Episode 37 completed. Time: 0.99 seconds. Epsilon: 0.0225283995449392. Steps: 2000
Episode 38 completed. Time: 1.00 seconds. Epsilon: 0.020275559590445278. Steps: 2000
Episode 39 completed. Time: 0.99 seconds. Epsilon: 0.01824800363140075. Steps: 2000
Episode 40 completed. Time: 0.99 seconds. Epsilon: 0.016423203268260675. Steps: 2000
Episode 41 completed. Time: 0.98 seconds. Epsilon: 0.014780882941434608. Steps: 2000
Episode 42 completed. Time: 0.99 seconds. Epsilon: 0.013302794647291147. Steps: 2000
Episode 43 completed. Time: 0.98 seconds. Epsilon: 0.011972515182562033. Steps: 2000
Episode 44 completed. Time: 1.00 seconds. Epsilon: 0.01077526366430583. Steps: 2000
Episode 45 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 46 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 47 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 48 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 49 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 50 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 51 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 52 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 53 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 54 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 55 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 56 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 57 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 58 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 59 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 60 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 61 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 62 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 63 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 64 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 65 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 66 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 67 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 68 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 69 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 70 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 71 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 72 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 73 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 74 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 75 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 76 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 77 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 78 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 79 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 80 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 81 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 82 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 83 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 84 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 85 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 86 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 87 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 88 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 89 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 90 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 91 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 92 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 93 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 94 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 95 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 96 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 97 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 98 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 99 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 100 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 101 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 102 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 103 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 104 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 105 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 106 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 107 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 108 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 109 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 110 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 111 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 112 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 113 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 114 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 115 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 116 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 117 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 118 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 119 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 120 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 121 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 122 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 123 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 124 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 125 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 126 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 127 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 128 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 129 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 130 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 131 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 132 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 133 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 134 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 135 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 136 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 137 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 138 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 139 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 140 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 141 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 142 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 143 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 144 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 145 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 146 completed. Time: 0.95 seconds. Epsilon: 0.01. Steps: 2000
Episode 147 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 148 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 149 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 150 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 151 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 152 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 153 completed. Time: 1.12 seconds. Epsilon: 0.01. Steps: 2000
Episode 154 completed. Time: 1.08 seconds. Epsilon: 0.01. Steps: 2000
Episode 155 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 156 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 157 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 158 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 159 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 160 completed. Time: 1.11 seconds. Epsilon: 0.01. Steps: 2000
Episode 161 completed. Time: 1.11 seconds. Epsilon: 0.01. Steps: 2000
Episode 162 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 163 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 164 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 165 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 166 completed. Time: 0.95 seconds. Epsilon: 0.01. Steps: 2000
Episode 167 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 168 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 169 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 170 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 171 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 172 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 173 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 174 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 175 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 176 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 177 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 178 completed. Time: 1.08 seconds. Epsilon: 0.01. Steps: 2000
Episode 179 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 180 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 181 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 182 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 183 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 184 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 185 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 186 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 187 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 188 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 189 completed. Time: 1.12 seconds. Epsilon: 0.01. Steps: 2000
Episode 190 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 191 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 192 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 193 completed. Time: 1.12 seconds. Epsilon: 0.01. Steps: 2000
Episode 194 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 195 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 196 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 197 completed. Time: 1.08 seconds. Epsilon: 0.01. Steps: 2000
Episode 198 completed. Time: 1.10 seconds. Epsilon: 0.01. Steps: 2000
Episode 199 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 200 completed. Time: 1.10 seconds. Epsilon: 0.01. Steps: 2000
Episode 201 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 202 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 203 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 204 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 205 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 206 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 207 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 208 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 209 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 210 completed. Time: 0.95 seconds. Epsilon: 0.01. Steps: 2000
Episode 211 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 212 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 213 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 214 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 215 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 216 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 217 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 218 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 219 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 220 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 221 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 222 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 223 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 224 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 225 completed. Time: 0.96 seconds. Epsilon: 0.01. Steps: 2000
Episode 226 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 227 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 228 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 229 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 230 completed. Time: 1.32 seconds. Epsilon: 0.01. Steps: 2000
Episode 231 completed. Time: 1.18 seconds. Epsilon: 0.01. Steps: 2000
Episode 232 completed. Time: 1.26 seconds. Epsilon: 0.01. Steps: 2000
Episode 233 completed. Time: 1.18 seconds. Epsilon: 0.01. Steps: 2000
Episode 234 completed. Time: 1.26 seconds. Epsilon: 0.01. Steps: 2000
Episode 235 completed. Time: 1.38 seconds. Epsilon: 0.01. Steps: 2000
Episode 236 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 237 completed. Time: 1.23 seconds. Epsilon: 0.01. Steps: 2000
Episode 238 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 239 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 240 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 241 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 242 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 243 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 244 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 245 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 246 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 247 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 248 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 249 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 250 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 251 completed. Time: 1.15 seconds. Epsilon: 0.01. Steps: 2000
Episode 252 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 253 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 254 completed. Time: 1.15 seconds. Epsilon: 0.01. Steps: 2000
Episode 255 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 256 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 257 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 258 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 259 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 260 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 261 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 262 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 263 completed. Time: 1.04 seconds. Epsilon: 0.01. Steps: 2000
Episode 264 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 265 completed. Time: 1.12 seconds. Epsilon: 0.01. Steps: 2000
Episode 266 completed. Time: 1.05 seconds. Epsilon: 0.01. Steps: 2000
Episode 267 completed. Time: 1.11 seconds. Epsilon: 0.01. Steps: 2000
Episode 268 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 269 completed. Time: 1.08 seconds. Epsilon: 0.01. Steps: 2000
Episode 270 completed. Time: 0.99 seconds. Epsilon: 0.01. Steps: 2000
Episode 271 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 272 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 273 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 274 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 275 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 276 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 277 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 278 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 279 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 280 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 281 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 282 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 283 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 284 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 285 completed. Time: 0.98 seconds. Epsilon: 0.01. Steps: 2000
Episode 286 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 287 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 288 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 289 completed. Time: 1.09 seconds. Epsilon: 0.01. Steps: 2000
Episode 290 completed. Time: 1.01 seconds. Epsilon: 0.01. Steps: 2000
Episode 291 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 292 completed. Time: 1.06 seconds. Epsilon: 0.01. Steps: 2000
Episode 293 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 294 completed. Time: 1.00 seconds. Epsilon: 0.01. Steps: 2000
Episode 295 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 296 completed. Time: 1.02 seconds. Epsilon: 0.01. Steps: 2000
Episode 297 completed. Time: 0.97 seconds. Epsilon: 0.01. Steps: 2000
Episode 298 completed. Time: 1.03 seconds. Epsilon: 0.01. Steps: 2000
Episode 299 completed. Time: 1.07 seconds. Epsilon: 0.01. Steps: 2000
Episode 300 completed. Time: 1.08 seconds. Epsilon: 0.01. Steps: 2000
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), at_maquina(m1:maquina,re:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,re:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(zf:posicion,p2:posicion), at_maquina(m1:maquina,p1:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(p6:posicion,re:posicion), adjacent(zf:posicion,re:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,p5:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,p1:posicion,oi:posicion)
Action chosen for state State(literals=frozenset({adjacent(zf:posicion,oi:posicion), adjacent(p5:posicion,oi:posicion), adjacent(oi:posicion,p1:posicion), libre(m1:maquina), adjacent(oi:posicion,re:posicion), adjacent(oi:posicion,p5:posicion), adjacent(p2:posicion,zf:posicion), adjacent(re:posicion,oi:posicion), adjacent(p2:posicion,p1:posicion), vacio(v1:vagon), adjacent(p6:posicion,p5:posicion), adjacent(zf:posicion,p2:posicion), sospechoso(e3:equipaje), at_equipaje(e3:equipaje,p6:posicion), adjacent(re:posicion,p6:posicion), adjacent(p5:posicion,p6:posicion), adjacent(oi:posicion,zf:posicion), adjacent(re:posicion,zf:posicion), adjacent(p1:posicion,p2:posicion), adjacent(p1:posicion,oi:posicion), adjacent(zf:posicion,re:posicion), at_maquina(m1:maquina,oi:posicion), es-oficina-inspeccion(oi:posicion), adjacent(p6:posicion,re:posicion), at_vagon(v1:vagon,p1:posicion)}), objects=frozenset({oi:posicion, p5:posicion, m1:maquina, v1:vagon, p1:posicion, re:posicion, e3:equipaje, p6:posicion, zf:posicion, p2:posicion}), goal=AND[at_equipaje(e3:equipaje,re:posicion)]): move(m1:maquina,oi:posicion,p1:posicion)
Plan took 2000 steps
Total reward: 0.00
Number of rows in Q table: 297
The agent did not reach the goal
